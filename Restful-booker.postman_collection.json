{
	"info": {
		"_postman_id": "8912c0b2-d7c8-4f6f-a8c6-bd8c50b17a6b",
		"name": "Restful-booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7281716"
	},
	"item": [
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jasonfile = pm.response.json()\r",
							"var token = jasonfile.token\r",
							"\r",
							"pm.environment.set(\"Token\", token);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/auth",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Send the initial request and store the response body and Booking ID as variables\r",
							"var responseBody = pm.response.json();\r",
							"var BookingID = responseBody.bookingid;\r",
							"var FirstName = responseBody.firstname;\r",
							"\r",
							"pm.environment.set(\"BookingID\", BookingID);\r",
							"pm.environment.set(\"previousResponseBody\", JSON.stringify(responseBody));\r",
							"pm.environment.set(\"FirstName\",FirstName)\r",
							"\r",
							"//Assert that the booking is  creating\r",
							"pm.test(\"Assert the Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//Assert that the body get a \"bookingid\"\r",
							"pm.test(\"Assert that the body got a BookingID\", function () {\r",
							"  pm.expect(pm.response.json()).to.have.property(\"bookingid\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/booking",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"// Send the new request and get the current response body\r",
							"pm.sendRequest(\"PUT\", \"booking/{{BookingID}}\", function (err, response) {\r",
							"    var previousResponseBody = pm.environment.get('previousResponseBody');\r",
							"    var currentResponseBody = response.text();\r",
							"\r",
							"    // Compare the previous and current response bodies\r",
							"    pm.test(\"Check if the response body has been updated\", function () {\r",
							"        pm.expect(previousResponseBody).not.to.equal(currentResponseBody);\r",
							"    });\r",
							"});\r",
							"\r",
							"// Assert that the booking is updating\r",
							"pm.test(\"Assert the Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jame\",\r\n    \"lastname\" : \"Bron\",\r\n    \"totalprice\" : 110,\r\n    \"depositpaid\" : false,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-02-01\",\r\n        \"checkout\" : \"2020-02-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/booking/{{BookingID}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"{{BookingID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial Updat Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Ahmed\",\r\n    \"lastname\" : \"Mohamed\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/booking/{{BookingID}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"{{BookingID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Assert the Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "password123",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/booking/{{BookingID}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"booking",
						"{{BookingID}}"
					]
				}
			},
			"response": []
		}
	]
}